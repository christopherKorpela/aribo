<launch>

  <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch"/>
  <node pkg="mjpeg_server" type="mjpeg_server" name="mjpeg_server" />

  <node name="RosAria" pkg="rosaria" type="RosAria">
    <param name="port" value="/dev/ttyUSB0" />
  </node>

  <rosparam command="load" file="$(find aribo)/config/pioneer.yaml" />

  <node pkg="aribo" type="velocityControl.py" name="velocityControl">
    <remap from="/VC/teleop" to="/teleop" />
    <remap from="/VC/out" to="/RosAria/cmd_vel" />
  </node>

    <arg name="camera_serial" default="0" />
  <arg name="calibrated" default="0" />

  <group ns="camera">
    <node pkg="nodelet" type="nodelet" name="camera_nodelet_manager" args="manager" />

    <node pkg="nodelet" type="nodelet" name="camera_nodelet"
          args="load pointgrey_camera_driver/PointGreyCameraNodelet camera_nodelet_manager" >
      <param name="frame_id" value="camera" />
      <param name="serial" value="$(arg camera_serial)" />

      <!-- When unspecified, the driver will use the default framerate as given by the
           camera itself. Use this parameter to override that value for cameras capable of
           other framerates. -->
      <!-- <param name="frame_rate" value="15" /> -->

      <!-- Use the camera_calibration package to create this file -->
      <param name="camera_info_url" if="$(arg calibrated)"
             value="file://$(env HOME)/.ros/camera_info/$(arg camera_serial).yaml" />
    </node>

    <node pkg="nodelet" type="nodelet" name="image_proc_debayer"
          args="load image_proc/debayer camera_nodelet_manager">
    </node>
  </group>



  <node name="hokuyo" pkg="hokuyo_node" type="hokuyo_node" respawn="false" output="screen">
    <!-- Starts up faster, but timestamps will be inaccurate. --> 
    <param name="calibrate_time" type="bool" value="false"/> 
    <!-- Set the port to connect to here -->
    <param name="port" type="string" value="/dev/ttyACM0"/> 
    <param name="intensity" type="bool" value="false"/>
    <param name="frame_id" value="laser"/>
  </node>
  
  <node name="rviz" pkg="rviz" type="rviz" respawn="false" output="screen" args="-d $(find aribo)/launch/master.rviz"/>
 
  <include file="$(find p2os_urdf)/launch/pioneer3at_urdf.launch" />

  <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0 0 0.1397 0.0 0 3.1415 base_link laser 100" />

</launch>
